AWSTemplateFormatVersion: '2010-09-09'
Description: Eliza-GPT Lambda + API Gateway HTTP API

Parameters:
  AllowedCallerCIDR:
    Type: String
    Default: 0.0.0.0/0
    Description: Comma-separated CIDR(s) allowed to call the Lambda
  LambdaS3Bucket:
    Type: String
    Description: S3 bucket where packaged Lambda code will be uploaded (for package step)
  LogGroupName:
    Type: String
    Default: /aws/lambda/eliza-lambda
    Description: CloudWatch Log Group for the Lambda

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: LambdaLogsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${LogGroupName}:*

  ElizaLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: eliza-lambda
      Handler: app.lambda_handler
      Runtime: python3.10
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          ALLOWED_CALLER_CIDR: !Ref AllowedCallerCIDR
          LOG_GROUP_NAME: !Ref LogGroupName
      Timeout: 10
      MemorySize: 256
      Code:
        S3Bucket: !Ref LambdaS3Bucket
        S3Key: eliza_lambda_package.zip

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref LogGroupName
      RetentionInDays: 14

  ApiGatewayHttpApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: eliza-http-api
      ProtocolType: HTTP

  ApiGatewayIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ApiGatewayHttpApi
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ElizaLambdaFunction.Arn}/invocations
      PayloadFormatVersion: '2.0'

  ApiGatewayRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ApiGatewayHttpApi
      RouteKey: 'POST /v1/chat/completions'
      Target: !Sub integrations/${ApiGatewayIntegration}

  ApiGatewayStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref ApiGatewayHttpApi
      StageName: $default
      AutoDeploy: true

  LambdaPermissionForApiGateway:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ElizaLambdaFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayHttpApi}/*/*

Outputs:
  ApiUrl:
    Description: HTTP API URL
    Value: !Sub https://${ApiGatewayHttpApi}.execute-api.${AWS::Region}.amazonaws.com
